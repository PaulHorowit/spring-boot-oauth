buildscript {
	ext {
		springBootVersion = '1.5.6.RELEASE'
	}
	repositories {
		mavenCentral()
		maven { url "http://repo.spring.io/release" }
		maven { url "http://repo.spring.io/milestone" }
		maven { url "https://plugins.gradle.org/m2/" }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath ("gradle.plugin.com.arenagod.gradle:mybatis-generator-plugin:1.3")
	}
}

apply plugin: 'war'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: "com.arenagod.gradle.MybatisGenerator"

group = 'com.wbda'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

configurations {
    mybatisGenerator
}

mybatisGenerator {
    verbose = true
    configFile = "src/main/resources/generator/generatorConfig.xml"
}

configurations {
    compile.exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    compile.exclude group: 'ch.qos.logback'
}

repositories {
	mavenCentral()
	mavenLocal()
	maven{ url "https://repository.jboss.org/nexus/content/repositories/releases" }
	maven { url "http://maven.springframework.org/release" }
	maven { url "https://repository.apache.org/content/groups/staging" }
	maven { url "http://download.oracle.com/maven" }
	maven { url "http://nexus.devlab722.net/nexus/content/repositories/releases" }
}


dependencies {
	compile('org.springframework.boot:spring-boot-starter')
	compile('org.springframework.security.oauth:spring-security-oauth2')
	compile('org.springframework.security:spring-security-jwt')
	compile('org.springframework.boot:spring-boot-starter-web')
	//compile('org.apache.commons:commons-dbcp2')

	compile("org.mybatis.spring.boot:mybatis-spring-boot-starter:1.3.1")
    compile('org.springframework.boot:spring-boot-starter-jdbc')
	compile('mysql:mysql-connector-java')

    compile("org.mybatis.generator:mybatis-generator-core:1.3.3")
    compile("org.mybatis.generator:mybatis-generator-maven-plugin:1.3.2")
	compile('org.springframework.boot:spring-boot-starter-log4j2')

	//compile('javax.servlet:servlet-api:2.5')
	//providedRuntime('org.springframework.boot:spring-boot-starter-tomcat')

	testCompile('org.springframework.boot:spring-boot-starter-test')
}
